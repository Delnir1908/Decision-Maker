<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Meta Information -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><%= pollTitle %> - Vote</title>

    <!-- External CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css" type="text/css" />

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bungee&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap" rel="stylesheet">

    <!-- App CSS -->
    <link rel="stylesheet" href="/styles/header.css" type="text/css" />
    <link rel="stylesheet" href="/styles/layout.css" type="text/css" />
    <link rel="stylesheet" href="/styles/main.css" type="text/css" />
    <link rel="stylesheet" href="/styles/nav.css" type="text/css" />
    <link rel="stylesheet" href="/styles/poll.css" type="text/css" />

    <!-- External JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="/scripts/composer-char-counter.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/timeago.js/4.0.2/timeago.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <!-- App JS -->
    <script type="text/javascript" src="/scripts/client.js"></script>

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
  </head>
  <body>
    <!-- Top nav bar (fixed) -->
    <nav>
      <span class="header">Decision Maker</span>
    </nav>

    <main>
      <h1><%= pollTitle %></h1>
      <form id="voteForm" method="POST" action="/<%= pollId %>/voted">
        <div>
          <p>Order the options from best (top) to worst (bottom):</p>
          <div id="options-container">
            <% options.forEach(option => { %>
              <div class="options" draggable="true" data-option-id="<%= option.id %>">
                <span><%= option.name %></span>
                <% if (option.description) { %>
                  <small><%= `(${option.description})` %></small>
                <% } %>
              </div>
            <% }); %>
          </div>
        </div>

        <% if (requiresName) { %>
          <label for="voterName">Your name:</label>
          <input type="text" id="voterName" name="voterName" placeholder="Your name">
          <br>
        <% } %>

        <button type="submit" class="submission">Submit Vote</button>
      </form>
    </main>
    <script>
      document.getElementById('voteForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const rankedOptions = Array.from(document.querySelectorAll('.options'))
          .map(div => div.dataset.optionId);

        const formData = {
          rankedOptions,
          voterName: document.getElementById('voterName')?.value || ''
        };

        fetch(this.action, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(formData)
        }).then(() => window.location = this.action);
      });
    </script>

    <script>
      function enableDragAndDrop(containerId) {
        const container = document.getElementById(containerId);
        let dragged = null;

        container.querySelectorAll('.options').forEach(option => {
          option.addEventListener('dragstart', (e) => {
            dragged = option;
            option.style.opacity = '0.5';
          });

          option.addEventListener('dragend', (e) => {
            dragged = null;
            option.style.opacity = '';
          });

          option.addEventListener('dragover', (e) => {
            e.preventDefault();
          });

          option.addEventListener('dragenter', (e) => {
            e.preventDefault();
            if (option !== dragged) option.style.border = '2px dashed navy';
          });

          option.addEventListener('dragleave', (e) => {
            option.style.border = '1px solid navy';
          });

          option.addEventListener('drop', (e) => {
            e.preventDefault();
            option.style.border = '1px solid navy';
            if (option !== dragged) {
              // Get the bounding rectangles to determine position
              const options = Array.from(container.querySelectorAll('.options'));
              const draggedIndex = options.indexOf(dragged);
              const dropIndex = options.indexOf(option);

              if (draggedIndex < dropIndex) {
                // Moving down: insert after the drop target
                container.insertBefore(dragged, option.nextSibling);
              } else {
                // Moving up: insert before the drop target
                container.insertBefore(dragged, option);
              }
            }
          });
        });
      }

      enableDragAndDrop('options-container');
      </script>

  </body>
</html>
